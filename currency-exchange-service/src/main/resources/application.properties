
server.port=8000
spring.application.name = currency-exchange-service


# This is how spring cloud starter config connects to spring cloud server
#spring.config.import = optional:configserver:http://localhost:8888

#------------ H2 database -----------
#enables console
#spring.h2.console.enabled=true 
# Sets custom url 
spring.datasource.url=jdbc:h2:mem:testdb

# To see sqls in console
spring.jpa.show-sql = true

# When using h2 DB spring auto-configuration wll create tabled. But we need below line to make database schema to work for mySql
spring.jpa.hibernate.ddl-auto=update

#------------Spring-security------------
spring.cloud.config.name = db-credentials
spring.security.user.name= ${db-credentials.db-username}
spring.security.user.password= ${db-credentials.db-password}
db-credentials.db-username=db_username
db-credentials.db-password=db_password



#------------Eureka naming server------------
eureka.client.serviceUrl.defaultZone= http://localhost:8761/eureka

#------------Resilience4j retry config------------
resilience4j.retry.instances.retry5Times.max-attempts= 5
#wait duration between retry's
resilience4j.retry.instances.retry5Times.wait-duration= 1s
#exponentially increase wait-diration
resilience4j.retry.instances.retry5Times.enable-exponential-backoff= true 


#------#Bulkhead-----
resilience4j.bulkhead.instances.default.max-concurrent-calls= 10


#------RateLimitter----
# 2 requests
resilience4j.ratelimiter.instances.default.limitForPeriod= 2
#In every 10 seconds
resilience4j.ratelimiter.instances.default.limitRefreshPeriod =10s


#-------Zipkin Distributed server--------
#management.tracing.sampling.probability=1.0 
#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}] 

## CHANGE-KUBERNETES
management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true